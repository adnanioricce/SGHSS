version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Api.Dockerfile
    container_name: sghss_app
    ports:
      - "8000:80"
    volumes:
      - ./volumes/app:/app
    environment:
      - ConnectionStrings__DefaultConnection=Host=localhost;Database=sghss;Username=postgres;Password=senha;Port=5432    
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=Host=db;Database=sghss;Username=postgres;Password=senha;Port=5432
      - JWT_SECRET=your-super-secret-jwt-key-here
      - CORS_ORIGINS=http://localhost:3000,https://yourdomain.com
    depends_on:
      db:        
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sghss_network
  db:
    build:
      context: .
      dockerfile: docker/Db.Dockerfile
    container_name: sghss_db
    ports:
      - "5532:5432"
    volumes:
      # - ./volumes/db:/var/lib/postgresql/data
      - postgres_data:/var/lib/postgresql/data
      - ./Db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=senha
      - POSTGRES_DB=sghss
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sghss_network
  redis:
    image: redis:7-alpine
    container_name: sghss_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sghss-network
volumes:
  postgres_data:
  redis_data:
